name: "Build ChaosMod"
author: laz
description: "Composite action for building chaos mod"
inputs:
  SONAR_TOKEN:
    description: 'Token used for accessing sonarcloud'
    required: true
runs:
  using: composite
  steps:
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1

    - uses: ilammy/msvc-dev-cmd@v1.13.0
      with:
        arch: x86

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: "Install Pip Packages"
      shell: bash
      run: pip install -r requirements.txt

    - name: "Restore DX9 Cache"
      id: dependency-dx9
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/vendor/DXSDK
        key: dependency-dx9

    - name: "Restore Discord Game SDK"
      id: dependency-game-sdk
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/vendor/discord_game_sdk
        key: dependency-discord

    - name: "Restore FFMPEG"
      id: dependency-ffmpeg
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/vendor/ffmpeg
        key: dependency-ffmpeg

    - name: "Restore Conan"
      id: dependency-conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: dependency-conan

    - name: "Cache Dependencies"
      if: steps.dependency-dx9.outputs.cache-hit != 'true' ||
        steps.dependency-discord.outputs.cache-hit != 'true' ||
        steps.dependency-ffmpeg.outputs.cache-hit != 'true' ||
        steps.dependency-conan.outputs.cache-hit != 'true'
      run: |
        python cli.py requirements
        python cli.py install
      shell: bash

    - name: Dotnet Build and Restore
      run: msbuild.exe ${{ github.workspace }}/ChaosMod.sln -t:Restore -p:Configuration=Release -p:Platform="Any CPU"
      shell: pwsh

    - name: Dotnet Publish
      run: dotnet publish ${{ github.workspace }}/ChaosMod.sln -p:PublishSingleFile=true -r win-x86 -c Release --self-contained true
      continue-on-error: true # It will error even on success because it cannot publish the class libraries
      shell: pwsh

    - name: Compile Chaos Mod
      run: python cli.py build -r
      shell: bash